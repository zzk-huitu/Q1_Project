Ext.override(Ext.form.field.Base,{onRender:function(){var b=this;var a=b.up("baseform");if(a&&!b.isNotForm){b.funCode=a.funCode}b.callParent(arguments)}});Ext.override(Ext.form.field.Number,{value:0,minValue:0});Ext.override(Ext.form.Basic,{constructor:function(a,b){var c=this;c.setItemsReadOnly=function(e){var d=this.getFields();d.each(function(g){if(!g.initialConfig.readOnly){g.setReadOnly(e)}})};c.callParent(arguments)},getFields:function(){var a=this._fields;if(!a){a=this._fields=Ext.create("Ext.util.MixedCollection");if(this.owner.funCode){a.addAll(this.owner.query("[isFormField][funCode="+this.owner.funCode+"]"))}else{a.addAll(this.owner.query("[isFormField]"))}}return a}});Ext.override(Ext.form.field.Trigger,{setReadOnly:function(b){var a=this;a[b?"addCls":"removeCls"](a.readOnlyCls);this.callParent(arguments)}});Ext.override(Ext.button.Button,{onClick:function(e){var me=this;if(me.preventDefault||(me.disabled&&me.getHref())&&e){e.preventDefault()}if(e.button!==0){return}if(!me.disabled){if(me.enableToggle&&(me.allowDepress!==false||!me.pressed)){me.toggle()}if(me.menu&&!me.hasVisibleMenu()&&!me.ignoreNextClick){me.showMenu()}var flag=me.fireEvent("beforeclick",me,e);if(flag!=false){me.onBlur();me.fireEvent("click",me,e);if(!Ext.isEmpty(me.handler)&&Ext.isString(me.handler)){me.handler=eval(me.handler)}if(me.handler){me.handler.call(me.scope||me,me,e)}}else{}me.fireEvent("clicked",me,e)}}});Ext.override(Ext.form.field.Base,{fireKey:function(c,b){if(c.isSpecialKey()){var a=this.fireEvent("beforeSpecialkey",this,c,b);if(a!=false){this.fireEvent("specialkey",this,c,b)}this.fireEvent("specialkeyed",this,c,b)}},});Ext.override(Ext.form.field.Base,{fieldSubTpl:['<input id="{id}" data-ref="inputEl" type="{type}" {inputAttrTpl}',' size="1"','<tpl if="name"> name="{name}"</tpl>','<tpl if="value"> value="{[Ext.util.Format.htmlEncode(values.value)]}"</tpl>','<tpl if="placeholder"> placeholder="{placeholder}"</tpl>','{%if (values.maxLength !== undefined){%} maxlength="{maxLength}"{%}%}','<tpl if="readOnly"> readonly="readonly"</tpl>','<tpl if="disabled"> disabled="disabled"</tpl>','<tpl if="tabIdx != null"> tabindex="{tabIdx}"</tpl>','<tpl if="fieldStyle"> style="{fieldStyle}"</tpl>',"<tpl if=\"ariaEl == 'inputEl'\">",'<tpl foreach="ariaElAttributes"> {$}="{.}"</tpl>',"</tpl>",'<tpl foreach="inputElAriaAttributes"> {$}="{.}"</tpl>',' class="{fieldCls} {typeCls} {typeCls}-{ui} {editableCls} {inputCls}" autocomplete="off"/>',{disableFormats:true}],});Ext.override(Ext.grid.column.Column,{afterRender:function(){var b=this,a=b.el;b.callParent(arguments);b.titleAlign=b.titleAlign||b.align;a.addCls(Ext.baseCSSPrefix+"column-header-align-"+b.titleAlign).addClsOnOver(b.overCls)}});Ext.override(Ext.app.Application,{getViewController:function(b,a){var k=this,d=k.controllers,h,f,g,e,j,l;f=d.get(b);if(!f){l=d.items;for(e=0,g=l.length;e<g;++e){j=l[e];h=j.moduleClassName;if(h&&h===b){f=j;break}}}if(!f&&!a){h=b;f=Ext.create(h,{application:k,moduleClassName:h});d.add(f)}return f},});Ext.override(Ext.grid.column.Column,{renderTpl:['<div id="{id}-titleEl" data-ref="titleEl" role="presentation"','{tipMarkup}class="',Ext.baseCSSPrefix,'column-header-inner<tpl if="!$comp.isContainer"> ',Ext.baseCSSPrefix,"leaf-column-header</tpl>",'<tpl if="empty"> ',Ext.baseCSSPrefix,'column-header-inner-empty</tpl>">','<div id="{id}-textContainerEl" data-ref="textContainerEl" role="presentation" class="',Ext.baseCSSPrefix,'column-header-text-container">','<div role="presentation" class="',Ext.baseCSSPrefix,'column-header-text-wrapper">','<div id="{id}-textEl" data-ref="textEl" role="presentation" class="',Ext.baseCSSPrefix,"column-header-text",'{childElCls}">',"{%","values.$comp.afterText(out, values);","%}",'<span id="{id}-textInnerEl" data-ref="textInnerEl" role="presentation" class="',Ext.baseCSSPrefix,'column-header-text-inner">{text}</span>',"</div>","</div>","</div>",'<tpl if="!menuDisabled">','<div id="{id}-triggerEl" data-ref="triggerEl" role="presentation" unselectable="on" class="',Ext.baseCSSPrefix,"column-header-trigger",'{childElCls}" style="{triggerStyle}"></div>',"</tpl>","</div>","{%this.renderContainer(out,values)%}"],});Ext.override(Ext.form.field.ComboBox,{triggers:{clear:{cls:Ext.baseCSSPrefix+"form-clear-trigger",handler:function(a){var b=this;b.reset()},weight:-1,scope:"this",focusOnMousedown:true},}});Ext.override(Ext.form.field.Time,{getValue:function(){var a=this;if(a.multiSelect){return a.rawToValue(a.callParent(arguments))}else{var c=a.submitFormat||a.format,b=a.value;return b?Ext.Date.format(b,c):null}}});Ext.override(Ext.panel.Panel,{collapseToolText:"折叠面板",expandToolText:"展开面板",closeToolText:"关闭面板"});Ext.override(Ext.window.Window,{closeToolText:"关闭对话框"});Ext.override(Ext.menu.Menu,{mouseLeaveDelay:0,});